{"ast":null,"code":"import _asyncToGenerator from \"/Users/vasukaker/Desktop/Startups/BeaverNavNew/BeaverNav/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/vasukaker/Desktop/Startups/BeaverNavNew/BeaverNav/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vasukaker/Desktop/Startups/BeaverNavNew/BeaverNav/frontend/src/pages/Home.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React from 'react';\nimport GoogleLogin from 'react-google-login';\nimport { useState } from 'react';\nimport { applyMiddleware } from '@reduxjs/toolkit';\nexport default function Home() {\n  var _useState = useState(localStorage.getItem('loginData') ? JSON.parse(localStorage.getItem('loginData')) : null),\n    _useState2 = _slicedToArray(_useState, 2),\n    loginData = _useState2[0],\n    setLoginData = _useState2[1];\n  var handleFailure = function handleFailure(result) {\n    alert(result);\n  };\n  var handleLogin = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(googleData) {\n      var res, data;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('/api/google-login', {\n              method: 'POST',\n              body: JSON.stringify({\n                token: googleData.tokenId\n              }),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n          case 5:\n            data = _context.sent;\n            setLoginData(data);\n            localStorage.setItem('loginData', JSON.stringify(data));\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function handleLogin(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleLogout = function handleLogout() {\n    localStorage.removeItem('loginData');\n    setLoginData(null);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"React Google Login App\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, loginData ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }\n  }, \"Welcome back \", loginData.email), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 33\n    }\n  }, \"Logout\")) : /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n    buttonText: \"Log in with Google\",\n    onSuccess: handleLogin,\n    onFailure: handleFailure,\n    cookiePolicy: 'single_host_origin',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }))));\n}","map":{"version":3,"names":["React","GoogleLogin","useState","applyMiddleware","Home","localStorage","getItem","JSON","parse","loginData","setLoginData","handleFailure","result","alert","handleLogin","googleData","fetch","method","body","stringify","token","tokenId","headers","res","json","data","setItem","handleLogout","removeItem","email","process","env","REACT_APP_GOOGLE_CLIENT_ID"],"sources":["/Users/vasukaker/Desktop/Startups/BeaverNavNew/BeaverNav/frontend/src/pages/Home.js"],"sourcesContent":["import React from 'react'\nimport GoogleLogin from 'react-google-login';\nimport {useState} from 'react';\nimport { applyMiddleware } from '@reduxjs/toolkit';\n\nexport default function Home() {\n    const [loginData, setLoginData] = useState(\n        localStorage.getItem('loginData') ? JSON.parse(localStorage.getItem('loginData'))\n        : null\n    );\n\n    const handleFailure = (result) => {\n        alert(result);\n    };\n\n    const handleLogin = async (googleData) => {\n        const res = await fetch('/api/google-login', {\n            method: 'POST',\n            body: JSON.stringify({\n                token: googleData.tokenId,\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n        const data = await res.json()\n        setLoginData(data);\n        localStorage.setItem('loginData', JSON.stringify(data));\n    };\n\n\n\n    const handleLogout = () => {\n        localStorage.removeItem('loginData');\n        setLoginData(null);\n    };\n\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>React Google Login App</h1>\n                <div>\n                    {\n                        loginData ? (\n                            <div>\n                                <h3>Welcome back {loginData.email}</h3>\n                                <button onClick={handleLogout}>Logout</button>\n                            </div>\n                        ) : (\n                            <GoogleLogin \n                            clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID} \n                            buttonText=\"Log in with Google\"\n                            onSuccess={handleLogin}\n                            onFailure={handleFailure}\n                            cookiePolicy={'single_host_origin'}\n                            >\n                            </GoogleLogin>\n                        )\n                    }\n                </div>\n            </header>\n        </div>\n    );\n}"],"mappings":";;;+CACA;AADA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAASC,eAAe,QAAQ,kBAAkB;AAElD,eAAe,SAASC,IAAI,GAAG;EAAA,gBACOF,QAAQ,CACtCG,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC/E,IAAI,CACT;IAAA;IAHMG,SAAS;IAAEC,YAAY;EAK9B,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAIC,MAAM,EAAK;IAC9BC,KAAK,CAACD,MAAM,CAAC;EACjB,CAAC;EAED,IAAME,WAAW;IAAA,sEAAG,iBAAOC,UAAU;MAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACfC,KAAK,CAAC,mBAAmB,EAAE;cACzCC,MAAM,EAAE,MAAM;cACdC,IAAI,EAAEX,IAAI,CAACY,SAAS,CAAC;gBACjBC,KAAK,EAAEL,UAAU,CAACM;cACtB,CAAC,CAAC;cACFC,OAAO,EAAE;gBACL,cAAc,EAAE;cACpB;YACJ,CAAC,CAAC;UAAA;YARIC,GAAG;YAAA;YAAA,OASUA,GAAG,CAACC,IAAI,EAAE;UAAA;YAAvBC,IAAI;YACVf,YAAY,CAACe,IAAI,CAAC;YAClBpB,YAAY,CAACqB,OAAO,CAAC,WAAW,EAAEnB,IAAI,CAACY,SAAS,CAACM,IAAI,CAAC,CAAC;UAAC;UAAA;YAAA;QAAA;MAAA;IAAA,CAC3D;IAAA,gBAbKX,WAAW;MAAA;IAAA;EAAA,GAahB;EAID,IAAMa,YAAY,GAAG,SAAfA,YAAY,GAAS;IACvBtB,YAAY,CAACuB,UAAU,CAAC,WAAW,CAAC;IACpClB,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAGD,oBACI;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAChB;IAAQ,SAAS,EAAC,YAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC1B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,wBAAsB,CAAK,eAC/B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEQD,SAAS,gBACL;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,eAAa,EAACA,SAAS,CAACoB,KAAK,CAAM,eACvC;IAAQ,OAAO,EAAEF,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,QAAM,CAAS,CAC5C,gBAEN,oBAAC,WAAW;IACZ,QAAQ,EAAEG,OAAO,CAACC,GAAG,CAACC,0BAA2B;IACjD,UAAU,EAAC,oBAAoB;IAC/B,SAAS,EAAElB,WAAY;IACvB,SAAS,EAAEH,aAAc;IACzB,YAAY,EAAE,oBAAqB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAGtC,CAEH,CACD,CACP;AAEd"},"metadata":{},"sourceType":"module"}